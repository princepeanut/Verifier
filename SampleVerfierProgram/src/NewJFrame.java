
import VF.Verifier;
import VF.VerifierForm;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tan guang sheng
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        haveInput = new javax.swing.JButton();
        minSize = new javax.swing.JButton();
        maxSize = new javax.swing.JButton();
        isInt = new javax.swing.JButton();
        isDouble = new javax.swing.JButton();
        isLong = new javax.swing.JButton();
        isFloat = new javax.swing.JButton();
        isBoolean = new javax.swing.JButton();
        isDateValid = new javax.swing.JButton();
        hasUpper = new javax.swing.JButton();
        hasLower = new javax.swing.JButton();
        hasDigit = new javax.swing.JButton();
        hasSymbol = new javax.swing.JButton();
        isHomeNumber = new javax.swing.JButton();
        isZipCode = new javax.swing.JButton();
        maxAge = new javax.swing.JButton();
        minAge = new javax.swing.JButton();
        isUserName = new javax.swing.JButton();
        isPassword = new javax.swing.JButton();
        isTPNumber = new javax.swing.JButton();
        isICNumber = new javax.swing.JButton();
        isEmailAddress = new javax.swing.JButton();
        isMobileNumber = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        haveInput.setText("haveInput");
        haveInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                haveInputActionPerformed(evt);
            }
        });

        minSize.setText("minSize 6");
        minSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minSizeActionPerformed(evt);
            }
        });

        maxSize.setText("maxSize 6");
        maxSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxSizeActionPerformed(evt);
            }
        });

        isInt.setText("isInt");
        isInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isIntActionPerformed(evt);
            }
        });

        isDouble.setText("isDouble");
        isDouble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isDoubleActionPerformed(evt);
            }
        });

        isLong.setText("isLong");
        isLong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isLongActionPerformed(evt);
            }
        });

        isFloat.setText("isFloat");
        isFloat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isFloatActionPerformed(evt);
            }
        });

        isBoolean.setText("isBoolean");
        isBoolean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isBooleanActionPerformed(evt);
            }
        });

        isDateValid.setText("<html> isDateValid<br>\ndd-MM-yyyy"); // NOI18N
        isDateValid.setToolTipText("");
        isDateValid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isDateValidActionPerformed(evt);
            }
        });

        hasUpper.setText("hasUpper");
        hasUpper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasUpperActionPerformed(evt);
            }
        });

        hasLower.setText("hasLower");
        hasLower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasLowerActionPerformed(evt);
            }
        });

        hasDigit.setText("hasDigit");
        hasDigit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasDigitActionPerformed(evt);
            }
        });

        hasSymbol.setText("hasSymbol");
        hasSymbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasSymbolActionPerformed(evt);
            }
        });

        isHomeNumber.setText("isHomeNumber");
        isHomeNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isHomeNumberActionPerformed(evt);
            }
        });

        isZipCode.setText("isZipCode");
        isZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isZipCodeActionPerformed(evt);
            }
        });

        maxAge.setText("maxAge");
        maxAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxAgeActionPerformed(evt);
            }
        });

        minAge.setText("minAge");
        minAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minAgeActionPerformed(evt);
            }
        });

        isUserName.setText("isUserName");
        isUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isUserNameActionPerformed(evt);
            }
        });

        isPassword.setText("isPassword");
        isPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPasswordActionPerformed(evt);
            }
        });

        isTPNumber.setText("isTPNumber");
        isTPNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isTPNumberActionPerformed(evt);
            }
        });

        isICNumber.setText("isICNumber");
        isICNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isICNumberActionPerformed(evt);
            }
        });

        isEmailAddress.setText("isEmailAddress");
        isEmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isEmailAddressActionPerformed(evt);
            }
        });

        isMobileNumber.setText("isMobileNumber");
        isMobileNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMobileNumberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(minAge, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(isDateValid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(minSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(maxSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isDouble, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isLong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isFloat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isBoolean, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(haveInput, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(isUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hasUpper, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(isPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hasLower, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(isTPNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hasDigit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(isICNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hasSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(isEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(isMobileNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(isHomeNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(isZipCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(maxAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(haveInput)
                            .addComponent(isUserName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hasUpper)
                            .addComponent(isPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hasLower)
                            .addComponent(isTPNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hasDigit)
                            .addComponent(isICNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hasSymbol)
                            .addComponent(isEmailAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isMobileNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isHomeNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isZipCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxAge))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(minSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isInt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isDouble)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isLong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isFloat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isBoolean)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isDateValid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minAge)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minSizeActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.minSize(6)){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_minSizeActionPerformed

    private void maxSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxSizeActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.maxSize(6)){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_maxSizeActionPerformed

    private void isIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isIntActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.isInt()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isIntActionPerformed

    private void isDoubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isDoubleActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.isDouble()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isDoubleActionPerformed

    private void isLongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isLongActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.isLong()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isLongActionPerformed

    private void isFloatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isFloatActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.isFloat()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isFloatActionPerformed

    private void isBooleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isBooleanActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.isBoolean()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isBooleanActionPerformed

    private void isDateValidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isDateValidActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.isDateValid("dd-MM-yyyy")){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isDateValidActionPerformed

    private void haveInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_haveInputActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.haveInput()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_haveInputActionPerformed

    private void hasUpperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasUpperActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.hasUpper()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_hasUpperActionPerformed

    private void hasLowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasLowerActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.hasLower()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_hasLowerActionPerformed

    private void hasDigitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasDigitActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.hasDigit()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_hasDigitActionPerformed

    private void hasSymbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasSymbolActionPerformed
        // TODO add your handling code here:
        Verifier textVerifier = new Verifier(jTextField1.getText());
        if(textVerifier.hasSymbol()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_hasSymbolActionPerformed

    private void isUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isUserNameActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        //isUserName(int max, int min, boolean chackLower, boolean chackUpper, boolean chackDigit, boolean chackSymbol)
        if(textVerifier.isUserName(6, 10, true, false, false, false)){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isUserNameActionPerformed

    private void isPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPasswordActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        //isPassword(int max, int min, boolean chackLower, boolean chackUpper, boolean chackDigit, boolean chackSymbol)
        if(textVerifier.isPassword(6, 10, true, false, false, false)){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isPasswordActionPerformed

    private void isTPNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isTPNumberActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.isTPNumber()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isTPNumberActionPerformed

    private void isICNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isICNumberActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.isICNumber()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isICNumberActionPerformed

    private void isEmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isEmailAddressActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.isEmailAddress()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isEmailAddressActionPerformed

    private void isMobileNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMobileNumberActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.isMobileNumber()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }

    }//GEN-LAST:event_isMobileNumberActionPerformed

    private void isHomeNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isHomeNumberActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.isHomeNumber()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isHomeNumberActionPerformed

    private void isZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isZipCodeActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.isZipCode()){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_isZipCodeActionPerformed

    private void maxAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxAgeActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.maxAge(18, "dd-MM-yyyy")){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_maxAgeActionPerformed

    private void minAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minAgeActionPerformed
        // TODO add your handling code here:
        VerifierForm textVerifier = new VerifierForm(jTextField1.getText());
        if(textVerifier.minAge(18, "dd-MM-yyyy")){
            JOptionPane.showMessageDialog(null, "True");
        }else{
            JOptionPane.showMessageDialog(null, "False");
        }
    }//GEN-LAST:event_minAgeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hasDigit;
    private javax.swing.JButton hasLower;
    private javax.swing.JButton hasSymbol;
    private javax.swing.JButton hasUpper;
    private javax.swing.JButton haveInput;
    private javax.swing.JButton isBoolean;
    private javax.swing.JButton isDateValid;
    private javax.swing.JButton isDouble;
    private javax.swing.JButton isEmailAddress;
    private javax.swing.JButton isFloat;
    private javax.swing.JButton isHomeNumber;
    private javax.swing.JButton isICNumber;
    private javax.swing.JButton isInt;
    private javax.swing.JButton isLong;
    private javax.swing.JButton isMobileNumber;
    private javax.swing.JButton isPassword;
    private javax.swing.JButton isTPNumber;
    private javax.swing.JButton isUserName;
    private javax.swing.JButton isZipCode;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton maxAge;
    private javax.swing.JButton maxSize;
    private javax.swing.JButton minAge;
    private javax.swing.JButton minSize;
    // End of variables declaration//GEN-END:variables
}
